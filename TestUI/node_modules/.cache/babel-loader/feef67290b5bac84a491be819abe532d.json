{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/src/components/Home/index.js\";\n///////////////////////////////////////////////////////////////\nimport React, { Component } from \"react\";\nimport \"./Home.scss\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport utils from \"../../utils\";\nimport tron from \"../../utils/tron\";\nimport option from \"../../utils/option\";\nimport price from \"../../utils/price\";\nimport $ from 'jquery';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      USDT_balance: 0,\n      TRX_balance: 0,\n      message: '',\n      BTCUSD: 0,\n      BTCUSDpair: null,\n      trans: []\n    };\n    _this.tick = _this.tick.bind(_assertThisInitialized(_this));\n    _this.intervalHandle = null;\n    _this.loaded = false;\n    _this.duration = 10;\n    _this.bet = 0;\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"tick\",\n    value: function () {\n      var _tick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.loaded) {\n                  _context.next = 16;\n                  break;\n                }\n\n                if (!(utils.address != '' && !!tron.tronWeb)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.t0 = this;\n                _context.next = 5;\n                return tron.getUSDTBalance(utils.address);\n\n              case 5:\n                _context.t1 = _context.sent;\n                _context.next = 8;\n                return tron.getTRXBalance(utils.address);\n\n              case 8:\n                _context.t2 = _context.sent;\n                _context.next = 11;\n                return option.pairs(1);\n\n              case 11:\n                _context.t3 = _context.sent;\n                _context.t4 = {\n                  USDT_balance: _context.t1,\n                  TRX_balance: _context.t2,\n                  BTCUSDpair: _context.t3\n                };\n                _context.t5 = this.forceUpdate();\n\n                _context.t0.setState.call(_context.t0, _context.t4, _context.t5);\n\n                this.loaded = true;\n\n              case 16:\n                _context.t6 = this;\n                _context.next = 19;\n                return price.getBTCUSD();\n\n              case 19:\n                _context.t7 = _context.sent;\n                _context.t8 = {\n                  BTCUSD: _context.t7\n                };\n\n                _context.t6.setState.call(_context.t6, _context.t8);\n\n                this.getTransactions();\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function tick() {\n        return _tick.apply(this, arguments);\n      }\n\n      return tick;\n    }()\n  }, {\n    key: \"getTransactions\",\n    value: function () {\n      var _getTransactions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var Trans, options;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (tron.tronWeb) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                Trans = [];\n                options = {\n                  size: 20,\n                  eventName: \"newBet\"\n                };\n                _context2.next = 6;\n                return tron.tronWeb.getEventResult(option.OPTION_Address, options).then(function (result) {\n                  $.each(result, function (key, value) {\n                    Trans.push(value);\n                  });\n                });\n\n              case 6:\n                options = {\n                  size: 20,\n                  eventName: \"betClosed\"\n                };\n                _context2.next = 9;\n                return tron.tronWeb.getEventResult(option.OPTION_Address, options).then(function (result) {\n                  $.each(result, function (key, value) {\n                    Trans.push(value);\n                  });\n                });\n\n              case 9:\n                options = {\n                  size: 20,\n                  eventName: \"betCancelled\"\n                };\n                _context2.next = 12;\n                return tron.tronWeb.getEventResult(option.OPTION_Address, options).then(function (result) {\n                  $.each(result, function (key, value) {\n                    Trans.push(value);\n                  });\n                });\n\n              case 12:\n                if (Trans.length > 0) Trans.sort(function (a, b) {\n                  return b.timestamp - a.timestamp;\n                });\n                console.log(Trans);\n                this.setState({\n                  trans: Trans\n                }, this.forceUpdate());\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTransactions() {\n        return _getTransactions.apply(this, arguments);\n      }\n\n      return getTransactions;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function () {\n      var _componentWillUnmount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //console.log(\"unmounted\");\n                clearInterval(this.intervalHandle);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentWillUnmount() {\n        return _componentWillUnmount.apply(this, arguments);\n      }\n\n      return componentWillUnmount;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.tick();\n                this.intervalHandle = setInterval(this.tick, 3000);\n                return _context4.abrupt(\"return\");\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"callput\",\n    value: function () {\n      var _callput = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(_pairID, _type) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.setState({\n                  message: \"Please wait...\"\n                });\n                _context5.next = 3;\n                return option.requestPriceUpdate(_pairID);\n\n              case 3:\n                res = _context5.sent;\n\n                if (res) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                this.setState({\n                  message: \"Something wrong with your request, please retry!\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 7:\n                _context5.next = 9;\n                return utils.delay(3000);\n\n              case 9:\n                _context5.next = 11;\n                return option.getLatestPrice(_pairID);\n\n              case 11:\n                res = _context5.sent;\n\n                if (res) {\n                  _context5.next = 15;\n                  break;\n                }\n\n                this.setState({\n                  message: \"Something wrong with your request, please retry!\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 15:\n                this.setState({\n                  message: \"Placing CALL bet at \" + res + \" for \" + this.duration + \" seconds\"\n                });\n                _context5.next = 18;\n                return tron.Approve(option.OPTION_Address, parseInt(this.bet * 1000000), tron.USDT_Address);\n\n              case 18:\n                res = _context5.sent;\n\n                if (res) {\n                  _context5.next = 22;\n                  break;\n                }\n\n                this.setState({\n                  message: \"Something wrong with your request, please retry!\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 22:\n                _context5.next = 24;\n                return option.addBet(parseInt(this.bet * 1000000), _pairID, this.duration, _type);\n\n              case 24:\n                res = _context5.sent;\n\n                if (res) {\n                  _context5.next = 28;\n                  break;\n                }\n\n                this.setState({\n                  message: \"Something wrong with your request, please retry!\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 28:\n                this.setState({\n                  message: \"Your bet request has been sent successfully!\"\n                });\n\n              case 29:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function callput(_x, _x2) {\n        return _callput.apply(this, arguments);\n      }\n\n      return callput;\n    }()\n  }, {\n    key: \"selectDuration\",\n    value: function selectDuration() {\n      var e = document.getElementById(\"duration\");\n      var duration = e.value; //console.log(duration);\n\n      this.duration = duration;\n    }\n  }, {\n    key: \"updateBet\",\n    value: function updateBet(props) {\n      //console.log(parseFloat(props.target.value));\n      this.bet = parseFloat(props.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"site-section bg-light\",\n        id: \"contact-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"section-sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"TEST OPTION\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"#\",\n        className: \"p-5 bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-black\",\n        for: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Your Address:\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), utils.address, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"text-black\",\n        for: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Your Balance:\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), this.state.USDT_balance, \" USDT \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), this.state.TRX_balance, \" TRX\")), React.createElement(\"p\", {\n        id: \"topup_message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-md-6 mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"#\",\n        className: \"p-5 bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-black\",\n        for: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"BTC-USDT Pair: \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.state.BTCUSD)), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-black\",\n        for: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Duration: \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"duration\",\n        id: \"duration\",\n        onChange: function onChange() {\n          return _this2.selectDuration();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"10 seconds\"), React.createElement(\"option\", {\n        value: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"20 seconds\"), React.createElement(\"option\", {\n        value: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"30 seconds\"), React.createElement(\"option\", {\n        value: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"40 seconds\"), React.createElement(\"option\", {\n        value: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"50 seconds\"), React.createElement(\"option\", {\n        value: \"60\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"60 seconds\"))), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-black\",\n        for: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Bet Amount in USDT:\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.updateBet(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-black\",\n        for: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Winning Factor: \", this.state.BTCUSDpair ? parseFloat(this.state.BTCUSDpair.winningFactor._hex / 1000) : 0), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-black\",\n        for: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Win: \", this.state.BTCUSDpair ? parseFloat(this.state.BTCUSDpair.winningFactor._hex / 1000) * this.bet : 0), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        style: {\n          marginTop: \"3px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: void 0,\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.callput(1, 0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"CALL\"), React.createElement(\"a\", {\n        href: void 0,\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.callput(1, 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"PUT\")), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.state.message)), React.createElement(\"p\", {\n        id: \"claimtoken_message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"#\",\n        className: \"p-5 bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-black\",\n        for: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Transactions History:\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"custom-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Event Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"User\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Transaction ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Pair\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Amount\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Duration\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Open Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Type\"))), React.createElement(\"tbody\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.state.trans.length == 0 ? \"Loading...\" : null), this.state.trans.map(function (tran, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, tran.name), tran.name == 'newBet' ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: utils.tronScanAddress + tron.tronWeb.address.fromHex(tran.result._caller),\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, utils.truncateStr(tron.tronWeb.address.fromHex(tran.result._caller), 5))) : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: tron.tronScanTransaction + tran.transaction,\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, utils.truncateStr(tran.transaction, 5))), tran.name == 'newBet' ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, \"BTC-USD\") : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, utils.convertTimeStamp(tran.result._betTime * 1000)), tran.name == 'newBet' ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, tran.result._amount / 1000000, \" USDT\") : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }), tran.name == 'newBet' ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, tran.result._duration, \" seconds\") : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }), tran.name == 'newBet' ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, tran.result._openPrice / 1000000) : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }), tran.name == 'newBet' ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, tran.result._betType == 0 ? 'CALL' : 'PUT') : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }));\n      }))))))))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };","map":{"version":3,"sources":["/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/src/components/Home/index.js"],"names":["React","Component","TronLinkGuide","utils","tron","option","price","$","Home","props","state","USDT_balance","TRX_balance","message","BTCUSD","BTCUSDpair","trans","tick","bind","intervalHandle","loaded","duration","bet","address","tronWeb","getUSDTBalance","getTRXBalance","pairs","forceUpdate","setState","getBTCUSD","getTransactions","Trans","options","size","eventName","getEventResult","OPTION_Address","then","result","each","key","value","push","length","sort","a","b","timestamp","console","log","clearInterval","setInterval","_pairID","_type","requestPriceUpdate","res","delay","getLatestPrice","Approve","parseInt","USDT_Address","addBet","e","document","getElementById","parseFloat","target","marginTop","selectDuration","updateBet","winningFactor","_hex","callput","map","tran","index","name","tronScanAddress","fromHex","_caller","truncateStr","tronScanTransaction","transaction","convertTimeStamp","_betTime","_amount","_duration","_openPrice","_betType"],"mappings":"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","sourcesContent":["///////////////////////////////////////////////////////////////\nimport React, { Component } from \"react\";\nimport \"./Home.scss\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport utils from \"../../utils\";\nimport tron from \"../../utils/tron\";\nimport option from \"../../utils/option\";\nimport price from \"../../utils/price\";\nimport $ from 'jquery';\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      USDT_balance:0,\n      TRX_balance:0,\n      message:'',\n      BTCUSD:0,\n      BTCUSDpair:null,\n      trans:[]\n    };\n    this.tick = this.tick.bind(this);\n    this.intervalHandle = null;\n    this.loaded = false;\n    this.duration = 10;\n    this.bet = 0;\n\n  }\n  async tick() { \n    //console.log(tron.tronWeb,utils.address);\n    if  (!this.loaded){\n      if (utils.address != '' && !!tron.tronWeb){\n        this.setState({\n          USDT_balance:await tron.getUSDTBalance(utils.address),\n          TRX_balance: await tron.getTRXBalance(utils.address),\n          BTCUSDpair: await option.pairs(1)\n        },this.forceUpdate());\n        this.loaded = true;\n      }\n        \n    }\n    this.setState({\n      BTCUSD:await price.getBTCUSD()\n    })\n    this.getTransactions();\n    \n    \n  }\n  async getTransactions(){\n    if (!tron.tronWeb) return;\n    var Trans = [];\n\n    var options = {size:20,eventName:\"newBet\"}; \n    await tron.tronWeb.getEventResult(option.OPTION_Address,options).then(result => {\n        $.each(result, function (key, value) {\n                Trans.push(value);\n            });\n    });\n    options = {size:20,eventName:\"betClosed\"}; \n    await tron.tronWeb.getEventResult(option.OPTION_Address,options).then(result => {\n        $.each(result, function (key, value) {\n                Trans.push(value);\n            });\n    });\n    options = {size:20,eventName:\"betCancelled\"}; \n    await tron.tronWeb.getEventResult(option.OPTION_Address,options).then(result => {\n        $.each(result, function (key, value) {\n                Trans.push(value);\n            });\n    });\n    if (Trans.length > 0)\n      Trans.sort(function (a, b) {\n        return b.timestamp - a.timestamp;\n      });\n    console.log(Trans);\n    this.setState({trans:Trans},this.forceUpdate());\n  }\n  async componentWillUnmount(){\n    //console.log(\"unmounted\");\n    clearInterval(this.intervalHandle);\n    \n  }\n  async componentDidMount() {\n    this.tick();\n    this.intervalHandle = setInterval(this.tick, 3000);\n    return;\n\n  }\n  async callput(_pairID,_type){\n    this.setState({message:\"Please wait...\"});\n    let res = await option.requestPriceUpdate(_pairID);\n    if (!res){\n      this.setState({message:\"Something wrong with your request, please retry!\"});\n      return;\n    }\n    await utils.delay(3000);\n    res = await option.getLatestPrice(_pairID);\n    if (!res){\n      this.setState({message:\"Something wrong with your request, please retry!\"});\n      return;\n    }\n    this.setState({message:\"Placing CALL bet at \" + res + \" for \" + this.duration + \" seconds\"});\n    res = await tron.Approve(option.OPTION_Address,parseInt(this.bet*1000000),tron.USDT_Address);\n    if (!res){\n      this.setState({message:\"Something wrong with your request, please retry!\"});\n      return;\n    }\n    //_amount, _pair_id, _duration, _betType\n    res = await option.addBet(parseInt(this.bet*1000000),_pairID,this.duration,_type);\n    if (!res){\n      this.setState({message:\"Something wrong with your request, please retry!\"});\n      return;\n    }\n    this.setState({message:\"Your bet request has been sent successfully!\"});\n\n  }\n  selectDuration(){\n    var e = document.getElementById(\"duration\");\n    var duration = e.value;\n    //console.log(duration);\n    this.duration = duration;\n  }\n  updateBet(props){\n    //console.log(parseFloat(props.target.value));\n    this.bet = parseFloat(props.target.value);\n  }\n  render() {\n   \n    return (\n      <div>\n          \n          <section className=\"site-section bg-light\" id=\"contact-section\">\n            <div className=\"container\" style={{marginTop:\"50px\"}}>\n              <div className=\"row mb-5\">\n                <div className=\"col-12 text-center\">\n                  <h3 className=\"section-sub-title\">TEST OPTION</h3>\n                  \n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-6 mb-5\">\n                  <form action=\"#\" className=\"p-5 bg-white\">\n                    <div className=\"row form-group\">\n                      \n                      <div className=\"col-md-12\">\n                      <label className=\"text-black\" for=\"subject\">Your Address:</label> <br/>\n                        {utils.address} <br/>\n                        <label className=\"text-black\" for=\"subject\">Your Balance:</label> <br/>\n                        {this.state.USDT_balance} USDT <br/>\n                        {this.state.TRX_balance} TRX\n                      </div>\n\n                    </div>\n\n                    <p id=\"topup_message\"></p>\n                  </form>\n                </div>\n                <div className=\"col-md-6 mb-5\">\n                  <form action=\"#\" className=\"p-5 bg-white\">\n                    <div className=\"row form-group\">\n                      \n                      <div className=\"col-md-12\">\n                        <label className=\"text-black\" for=\"subject\">BTC-USDT Pair: <strong>{this.state.BTCUSD}</strong></label> <br/>\n                      </div>\n                      <div className=\"col-md-12\">\n                        <label className=\"text-black\" for=\"subject\">Duration: </label> <br/>\n                        <select name=\"duration\" id=\"duration\" onChange={()=>this.selectDuration()}>\n                          <option value=\"10\">10 seconds</option>\n                          <option value=\"20\">20 seconds</option>\n                          <option value=\"30\">30 seconds</option>\n                          <option value=\"40\">40 seconds</option>\n                          <option value=\"50\">50 seconds</option>\n                          <option value=\"60\">60 seconds</option>\n                        </select>\n                      </div>\n                      <div className=\"col-md-12\">\n                        <label className=\"text-black\" for=\"subject\">Bet Amount in USDT:</label> <br/>\n                        <input type=\"number\" className=\"form-control\" onChange={(e)=>this.updateBet(e)}/>\n                      </div>\n                      <div className=\"col-md-12\">\n                        <label className=\"text-black\" for=\"subject\">Winning Factor: {this.state.BTCUSDpair ? parseFloat(this.state.BTCUSDpair.winningFactor._hex/1000) : 0}</label> <br/>\n                        \n                      </div>\n                      <div className=\"col-md-12\">\n                        <label className=\"text-black\" for=\"subject\">Win: {this.state.BTCUSDpair ? parseFloat(this.state.BTCUSDpair.winningFactor._hex/1000) * this.bet : 0}</label> <br/>\n                        \n                      </div>\n                      \n                       <div className=\"col-md-12\" style={{marginTop:\"3px\"}}>\n                        \n                          <a href={void(0)} className=\"btn btn-primary\" onClick={()=>this.callput(1,0)}>CALL</a>\n                          <a href={void(0)} className=\"btn btn-primary\" onClick={()=>this.callput(1,1)}>PUT</a>\n                        \n                      </div>\n                      <div className=\"col-md-12\">\n                        {this.state.message}\n                      </div>\n                    </div>\n\n                    <p id=\"claimtoken_message\"></p>\n                  </form>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-12 mb-5\">\n                  <form action=\"#\" className=\"p-5 bg-white\">\n                      <div className=\"col-md-12\">\n                        <label className=\"text-black\" for=\"subject\">Transactions History:</label> <br/>\n                      </div>\n                      <div className=\"col-md-12\">\n                        <table className=\"custom-table\">\n                            <tbody><tr>\n                              <th>Event Name</th>\n                              <th>User</th>\n                              <th>Transaction ID</th>\n                              <th>Pair</th>\n                              <th>Time</th>\n                              <th>Amount</th>\n                              <th>Duration</th>\n                              <th>Open Price</th>\n                              <th>Type</th>\n                              \n                            </tr>\n                            </tbody>\n                            <tbody className=\"\">\n                              <p>{this.state.trans.length == 0 ? \"Loading...\" : null}</p>\n                              {this.state.trans.map((tran, index) => (\n                                <tr key={index}>\n                                  <td>{tran.name}</td>\n                                  { tran.name == 'newBet' ?\n                                    <td><a href={utils.tronScanAddress + tron.tronWeb.address.fromHex(tran.result._caller)} target=\"_blank\">{utils.truncateStr(tron.tronWeb.address.fromHex(tran.result._caller), 5)}</a></td>\n                                    :\n                                    <td></td>\n                                  }\n                                  <td><a href={tron.tronScanTransaction + tran.transaction} target=\"_blank\">{utils.truncateStr(tran.transaction, 5)}</a></td>\n                                  { tran.name == 'newBet' ?\n                                    <td>BTC-USD</td>\n                                    :\n                                    <td></td>\n                                  }\n                                  <td>{utils.convertTimeStamp(tran.result._betTime * 1000)}</td>\n                                  { tran.name == 'newBet' ?\n                                    <td>{tran.result._amount/1000000} USDT</td>\n                                    :\n                                    <td></td>\n                                  }\n                                  { tran.name == 'newBet' ?\n                                    <td>{tran.result._duration} seconds</td>\n                                    :\n                                    <td></td>\n                                  }\n                                  { tran.name == 'newBet' ?\n                                    <td>{tran.result._openPrice/1000000}</td>\n                                    :\n                                    <td></td>\n                                  }\n                                  { tran.name == 'newBet' ?\n                                    <td>{tran.result._betType == 0 ? 'CALL' : 'PUT'}</td>\n                                    :\n                                    <td></td>\n                                  }\n                                </tr>\n                              ))}\n                            </tbody>\n                          </table>\n                      </div>\n                  </form>\n                </div>\n\n              </div>\n            </div>\n\n        </section>          \n      </div>\n\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}
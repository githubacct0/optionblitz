{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar tron = {\n  //Tokens\n  USDT_Address: 'TE3MLtNHrkddRNgy6tNi7bfUVRyAe9BpVL',\n  BLITZ_Address: '',\n  tronScanAddress: \"https://nile.tronscan.org/#/address/\",\n  //for mainnet remove shasta.\n  tronScanTransaction: \"https://nile.tronscan.org/#/transaction/\",\n  tronWeb: null,\n  getTRXBalance: function getTRXBalance(address) {\n    return _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return tron.tronWeb.trx.getBalance(address);\n\n            case 2:\n              res = _context.sent;\n              _context.prev = 3;\n              return _context.abrupt(\"return\", res / Math.pow(10, 6));\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](3);\n              return _context.abrupt(\"return\", 0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 7]]);\n    }))();\n  },\n  getUSDTBalance: function getUSDTBalance(address) {\n    return _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (tron.tronWeb) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 2:\n              _context2.next = 4;\n              return tron.getTRC20Balance(address, tron.USDT_Address, 6);\n\n            case 4:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  getBLITZBalance: function getBLITZBalance(address) {\n    return _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (tron.tronWeb) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", 0);\n\n            case 2:\n              _context3.next = 4;\n              return tron.getTRC20Balance(address, tron.BLITZ_Address, 6);\n\n            case 4:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  getTRC20Balance: function getTRC20Balance(address, contract_address, precision) {\n    return _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var tokenContract, res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n\n              if (tron.tronWeb) {\n                _context4.next = 3;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", 0);\n\n            case 3:\n              if (tron.tronWeb.isAddress(address)) {\n                _context4.next = 5;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", 0);\n\n            case 5:\n              _context4.next = 7;\n              return tronWeb.contract().at(contract_address);\n\n            case 7:\n              tokenContract = _context4.sent;\n              _context4.next = 10;\n              return tokenContract.balanceOf(address).call();\n\n            case 10:\n              res = _context4.sent;\n              return _context4.abrupt(\"return\", res.toNumber() / Math.pow(10, precision));\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log('TRC20 Balance:', _context4.t0);\n              return _context4.abrupt(\"return\", 0);\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 14]]);\n    }))();\n  },\n  Approve: function Approve(spender, amount, token_contract_address) {\n    return _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var tokenContract, res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n\n              if (tron.tronWeb) {\n                _context5.next = 3;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", null);\n\n            case 3:\n              _context5.next = 5;\n              return tronWeb.contract().at(token_contract_address);\n\n            case 5:\n              tokenContract = _context5.sent;\n              _context5.next = 8;\n              return tokenContract.approve(spender, amount).send({\n                shouldPollResponse: false,\n                callValue: 0\n              });\n\n            case 8:\n              res = _context5.sent;\n              return _context5.abrupt(\"return\", res);\n\n            case 12:\n              _context5.prev = 12;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n              return _context5.abrupt(\"return\", null);\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 12]]);\n    }))();\n  }\n};\nexport default tron;","map":{"version":3,"sources":["/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/src/utils/tron.js"],"names":["tron","USDT_Address","BLITZ_Address","tronScanAddress","tronScanTransaction","tronWeb","getTRXBalance","address","trx","getBalance","res","Math","pow","getUSDTBalance","getTRC20Balance","getBLITZBalance","contract_address","precision","isAddress","contract","at","tokenContract","balanceOf","call","toNumber","console","log","Approve","spender","amount","token_contract_address","approve","send","shouldPollResponse","callValue"],"mappings":"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","sourcesContent":["\n\nconst tron = {\n\t//Tokens\n\tUSDT_Address: 'TE3MLtNHrkddRNgy6tNi7bfUVRyAe9BpVL',\t\n\tBLITZ_Address: '',\n\n\ttronScanAddress: \"https://nile.tronscan.org/#/address/\",           //for mainnet remove shasta.\n    tronScanTransaction: \"https://nile.tronscan.org/#/transaction/\",\n\ttronWeb: null,\n\tasync getTRXBalance(address) {\n        let res = await tron.tronWeb.trx.getBalance(address);\n        try\n        {\n            return res / Math.pow(10, 6);\n        } catch (err) {\n            return 0;\n        }\n\t},\n\tasync getUSDTBalance(address){\n\t\tif (!tron.tronWeb) return 0;\n\t\treturn await tron.getTRC20Balance(address,tron.USDT_Address,6);\n\t},\n\tasync getBLITZBalance(address){\n\t\tif (!tron.tronWeb) return 0;\n\t\treturn await tron.getTRC20Balance(address,tron.BLITZ_Address,6);\n\t},\n\tasync getTRC20Balance(address,contract_address,precision){\n\t\ttry {\n\t\t\tif (!tron.tronWeb) return 0;\n\t\t\tif (!tron.tronWeb.isAddress(address)) return 0;\n            const tokenContract = await tronWeb.contract().at(contract_address);\n            let res = await tokenContract.balanceOf(address).call();\n            return res.toNumber() / Math.pow(10, precision);\n        } catch (err) {\n            console.log('TRC20 Balance:', err);\n            return 0;\n        }\n\t},\n\tasync Approve(spender, amount, token_contract_address){\n\t\ttry {\n\t\t\tif (!tron.tronWeb) return null;\n\t\t  \tconst tokenContract = await tronWeb.contract().at(token_contract_address);\n\t\t  \tlet res = await tokenContract.approve(spender, amount).send({\n\t\t          shouldPollResponse: false,\n\t\t          callValue: 0\n\t\t      });\n\t\t  return res;\n\t\t} catch (err) {\n\t\t  console.log(err);\n\t\t  return null;\n\t\t}\n\t},\n}\nexport default tron;"]},"metadata":{},"sourceType":"module"}
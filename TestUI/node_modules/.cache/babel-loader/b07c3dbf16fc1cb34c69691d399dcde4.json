{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport tron from './tron';\nvar option = {\n  //Tokens\n  OPTION_Address: 'TSRvq7QsZKEQSEQVcYm45NSyjSCD5h8hPV',\n  requestPriceUpdate: function requestPriceUpdate(_pair_id) {\n    var _this = this;\n\n    return _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var contract, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (tron.tronWeb) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", null);\n\n            case 3:\n              _context.next = 5;\n              return tron.tronWeb.contract().at(_this.OPTION_Address);\n\n            case 5:\n              contract = _context.sent;\n              _context.next = 8;\n              return contract.requestPriceUpdate(_pair_id).send({\n                shouldPollResponse: false,\n                callValue: 0\n              });\n\n            case 8:\n              res = _context.sent;\n              console.log(res);\n              return _context.abrupt(\"return\", res);\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n              return _context.abrupt(\"return\", null);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13]]);\n    }))();\n  },\n  getTRC20Balance: function getTRC20Balance(address, contract_address, precision) {\n    var _this2 = this;\n\n    return _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var tokenContract, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!(address == '')) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 3:\n              if (_this2.tronWeb) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 5:\n              if (_this2.tronWeb.isAddress(address)) {\n                _context2.next = 7;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 7:\n              _context2.next = 9;\n              return _this2.tronWeb.contract().at(contract_address);\n\n            case 9:\n              tokenContract = _context2.sent;\n              _context2.next = 12;\n              return tokenContract.balanceOf(address).call();\n\n            case 12:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", res.toNumber() / Math.pow(10, precision));\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log('TRC20 Balance:', _context2.t0);\n              return _context2.abrupt(\"return\", 0);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 16]]);\n    }))();\n  }\n};\nexport default option;","map":{"version":3,"sources":["/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/src/utils/option.js"],"names":["tron","option","OPTION_Address","requestPriceUpdate","_pair_id","tronWeb","contract","at","send","shouldPollResponse","callValue","res","console","log","getTRC20Balance","address","contract_address","precision","isAddress","tokenContract","balanceOf","call","toNumber","Math","pow"],"mappings":";;AACA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,IAAMC,MAAM,GAAG;AACd;AACAC,EAAAA,cAAc,EAAE,oCAFF;AAIRC,EAAAA,kBAJQ,8BAIWC,QAJX,EAIoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAE3BJ,IAAI,CAACK,OAFsB;AAAA;AAAA;AAAA;;AAAA,+CAEN,IAFM;;AAAA;AAAA;AAAA,qBAGPL,IAAI,CAACK,OAAL,CAAaC,QAAb,GAAwBC,EAAxB,CAA2B,KAAI,CAACL,cAAhC,CAHO;;AAAA;AAGxBI,cAAAA,QAHwB;AAAA;AAAA,qBAIdA,QAAQ,CAACH,kBAAT,CAA4BC,QAA5B,EAAsCI,IAAtC,CAA2C;AACpDC,gBAAAA,kBAAkB,EAAE,KADgC;AAEpDC,gBAAAA,SAAS,EAAE;AAFyC,eAA3C,CAJc;;AAAA;AAI1BC,cAAAA,GAJ0B;AAQ9BC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAR8B,+CASvBA,GATuB;;AAAA;AAAA;AAAA;AAW/BC,cAAAA,OAAO,CAACC,GAAR;AAX+B,+CAYxB,IAZwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcjC,GAlBa;AAmBRC,EAAAA,eAnBQ,2BAmBQC,OAnBR,EAmBgBC,gBAnBhB,EAmBiCC,SAnBjC,EAmB2C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAEnDF,OAAO,IAAE,EAF0C;AAAA;AAAA;AAAA;;AAAA,gDAE/B,CAF+B;;AAAA;AAAA,kBAGlD,MAAI,CAACV,OAH6C;AAAA;AAAA;AAAA;;AAAA,gDAG7B,CAH6B;;AAAA;AAAA,kBAIlD,MAAI,CAACA,OAAL,CAAaa,SAAb,CAAuBH,OAAvB,CAJkD;AAAA;AAAA;AAAA;;AAAA,gDAIV,CAJU;;AAAA;AAAA;AAAA,qBAMlB,MAAI,CAACV,OAAL,CAAaC,QAAb,GAAwBC,EAAxB,CAA2BS,gBAA3B,CANkB;;AAAA;AAMxCG,cAAAA,aANwC;AAAA;AAAA,qBAO9BA,aAAa,CAACC,SAAd,CAAwBL,OAAxB,EAAiCM,IAAjC,EAP8B;;AAAA;AAO1CV,cAAAA,GAP0C;AAAA,gDASvCA,GAAG,CAACW,QAAJ,KAAiBC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaP,SAAb,CATsB;;AAAA;AAAA;AAAA;AAW9CL,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAX8C,gDAYvC,CAZuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcxD;AAjCa,CAAf;AAmCA,eAAeZ,MAAf","sourcesContent":["\nimport tron from './tron';\n\nconst option = {\n\t//Tokens\n\tOPTION_Address: 'TSRvq7QsZKEQSEQVcYm45NSyjSCD5h8hPV',\t\n\t\n\tasync requestPriceUpdate(_pair_id){\n\t\ttry {\n\t\t\tif (!tron.tronWeb) return null;\n\t\t  \tconst contract = await tron.tronWeb.contract().at(this.OPTION_Address);\n\t\t  \tlet res = await contract.requestPriceUpdate(_pair_id).send({\n\t\t          shouldPollResponse: false,\n\t\t          callValue: 0\n\t\t      });\n\t\t  \tconsole.log(res);\n\t\t  \treturn res;\n\t\t} catch (err) {\n\t\t  console.log(err);\n\t\t  return null;\n\t\t}\n\t},\n\tasync getTRC20Balance(address,contract_address,precision){\n\t\ttry {\n\t\t\tif (address=='') return 0;\n\t\t\tif (!this.tronWeb) return 0;\n\t\t\tif (!this.tronWeb.isAddress(address)) return 0;\n\n            const tokenContract = await this.tronWeb.contract().at(contract_address);\n            let res = await tokenContract.balanceOf(address).call();\n            //console.log(address,contract_address,res);\n            return res.toNumber() / Math.pow(10, precision);\n        } catch (err) {\n            console.log('TRC20 Balance:', err);\n            return 0;\n        }\n\t},\n}\nexport default option;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/src/components/App/index.js\";\nimport React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { HashRouter, Route, Link } from 'react-router-dom';\nimport TronWeb from \"tronweb\";\nimport TronGrid from \"trongrid\";\nimport Home from '../Home';\nimport ContactPage from '../Contact';\nimport RequestPage from '../Request';\nimport AboutPage from '../About';\nimport Nav from '../Nav';\nimport utils from \"../../utils\";\nimport tron from \"../../utils/tron\"; /////////////////////////////////////////////////////////////////\n\nvar FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n    _this.loading = true;\n    _this.tick = _this.tick.bind(_assertThisInitialized(_this));\n    _this.intervalHandle = null;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"tick\",\n    value: function () {\n      var _tick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var tronWebState;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"Checking TronWeb connection:\");\n\n                if (!!window.tronWeb && window.tronWeb.ready) {\n                  console.log(\"Logged in and Ready\");\n                  utils.address = window.tronWeb.defaultAddress.base58;\n                  tron.tronWeb = window.tronWeb;\n                  console.log(utils.address);\n                  tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n                  this.setState({\n                    tronWeb: tronWebState\n                  });\n                  clearInterval(this.intervalHandle);\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function tick() {\n        return _tick.apply(this, arguments);\n      }\n\n      return tick;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function () {\n      var _componentWillUnmount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //console.log(\"unmounted\");\n                clearInterval(this.intervalHandle);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillUnmount() {\n        return _componentWillUnmount.apply(this, arguments);\n      }\n\n      return componentWillUnmount;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.intervalHandle = setInterval(this.tick, 200);\n                return _context3.abrupt(\"return\");\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(HashRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/about\",\n        component: AboutPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/request\",\n        component: RequestPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/contact\",\n        component: ContactPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Volumes/SSD/Active Projects/OptionBlitz/UI-2/TestUI/src/components/App/index.js"],"names":["React","Component","HashRouter","Route","Link","TronWeb","TronGrid","Home","ContactPage","RequestPage","AboutPage","Nav","utils","tron","FOUNDATION_ADDRESS","App","props","state","tronWeb","installed","loggedIn","loading","tick","bind","intervalHandle","console","log","window","ready","address","defaultAddress","base58","tronWebState","setState","clearInterval","setInterval"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport {\n  HashRouter,\n  Route,\n  Link\n} from 'react-router-dom';\n\nimport TronWeb from \"tronweb\";\nimport TronGrid from \"trongrid\";\nimport Home from '../Home';\nimport ContactPage from '../Contact';\nimport RequestPage from '../Request';\nimport AboutPage from '../About';\nimport Nav from '../Nav';\nimport utils from \"../../utils\";\nimport tron from \"../../utils/tron\";\n\n/////////////////////////////////////////////////////////////////\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    }\n\n    this.loading= true;\n    this.tick = this.tick.bind(this);\n    this.intervalHandle = null;\n\n  }\n  async tick() { \n    console.log(\"Checking TronWeb connection:\");  \n    \n    if ((!!window.tronWeb)&&(window.tronWeb.ready))\n    {\n      console.log(\"Logged in and Ready\");\n      utils.address = window.tronWeb.defaultAddress.base58;\n      tron.tronWeb = window.tronWeb;\n      console.log(utils.address);\n\n    \n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n      this.setState({\n          tronWeb: tronWebState\n      });\n      clearInterval(this.intervalHandle);\n\n    }\n  }\n  async componentWillUnmount(){\n    //console.log(\"unmounted\");\n    clearInterval(this.intervalHandle);\n    \n  }\n  async componentDidMount() {\n    \n    this.intervalHandle = setInterval(this.tick, 200);\n    return;\n\n  }\n  render() {\n    return (\n        <div>\n          <Nav />\n          <HashRouter>\n              <div>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/home\" component={Home} />\n                <Route path=\"/about\" component={AboutPage} />\n                <Route path=\"/request\" component={RequestPage} />\n                <Route path=\"/contact\" component={ContactPage} />\n                \n              </div>\n          </HashRouter >\n        </div>\n      );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}